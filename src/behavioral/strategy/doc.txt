Intenção oficial:

Definir uma família de algoritmos, encapsular cada um deles e fazê-los intercambiáveis.
O strategy permite que o algoritmo varie independentemente dos clientes que o utilizam.

Aplicabilidade
Use o Strategy quando:
 * você tiver variantes de um mesmo algoritmo e precisa trocar esses algoritmos em tempo de execução;
 * você precisar isolar a regra de negócio do algoritmo que deve ser aplicado (aplicando o princípio da responsabilidade única)
 * você perceber que está usando condicionais apenas para trocar o resultado final de um algoritmo

Consequências
O que é bom ou ruim no Strategy:
# Bom:
  * Troca herança por composição
  * Separa a regra de negócio de algoritmos complexos
  * Aplica os princípios do aberto/fechado e da responsabilidade única
# Ruim:
  * Pode ser complexo criar toda uma hierarquia de classes para aplicar novos algoritmos
  * Você pode obter o mesmo resultado com funções caso a linguagem de programação permitir
  * O código cliente precisa conhecer as estratégias que vai usar